{"version":3,"sources":["components/Input.jsx","components/Button.jsx","components/Icon.jsx","components/OptionsPreview.jsx","components/InputForm.jsx","components/OutputForm.jsx","components/Page.jsx","App.js","index.js"],"names":["Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","event","setState","target","type","react_default","a","createElement","className","concat","name","instance","onChange","onKeyUp","placeholder","Fragment","renderInput","Component","Buttton","onClick","text","Icon","i","e","aria-hidden","OptionsPreview","questions","makeOptionsArr","options","entries","map","option","key","components_Icon","components_Input","InputForm","questionCount","questionsMarkup","optionsCount","buttonText","addQuestion","delete","addOption","currentQuestion","handleClick","handleUpstreamOptions_debounce","handleKeyup","handleKeyUp","_","debounce","manageCurrentQuestion","_this2","innerHTML","addQuestionInput","persist","setTimeout","deleteQuestionInput","handleUpstreamOptions_NO_debounce","_this3","incrementOptionsCount","_this4","questionNum","updateObject","that","copy","cloneDeep","includes","tagName","_this5","onFocus","handleFocus","components_OptionsPreview","_this6","Array","from","length","v","_this7","_this8","n","slice","_this9","renderFormMarkUp","renderQuestionMarkup","Button","renderUserInput","React","ReactMarkdown","require","OutputForm","formTitle","source","formDescription","question","description","Page","makeQuestionsArray","num","id","list","array","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","newObj","createNewBlankQuestion","deleteQuestion","checkForClass","classList","deleteOptionFromQuestion","updateQuestions","console","log","questionNumNode","parentNode","parseInt","optionNum","questionsCopy","decrementOptionsCount","optionsCopy","current","newCount","defineProperty","error","values","components_InputForm","components_OutputForm","textAreaValue","App","components_Page","ReactDOM","render","src_App","document","getElementById"],"mappings":"2MA2DeA,cAxDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,IAETR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IALHA,4EAONY,GACXT,KAAKU,SAAS,CAAEL,MAAOI,EAAME,OAAON,8CAGpC,MAAwB,UAApBL,KAAKJ,MAAMgB,KAEXC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKjB,KAAKJ,MAAMgB,KAAhB,eACZC,EAAAC,EAAAC,cAAA,SACEG,KAAMlB,KAAKJ,MAAMuB,SACjBH,UAAS,GAAAC,OAAKjB,KAAKJ,MAAMgB,KAAhB,MACTP,MAAOL,KAAKI,MAAMC,MAClBe,SAAUpB,KAAKM,aACfe,QAASrB,KAAKJ,MAAMyB,QACpBC,YAAatB,KAAKJ,MAAM0B,eAID,cAApBtB,KAAKJ,MAAMgB,KAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKjB,KAAKJ,MAAMgB,KAAhB,eACZC,EAAAC,EAAAC,cAAA,YACEV,MAAOL,KAAKI,MAAMC,MAClBa,KAAMlB,KAAKJ,MAAMuB,SACjBE,QAASrB,KAAKJ,MAAMyB,QACpBC,YAAatB,KAAKJ,MAAM0B,YACxBN,UAAWhB,KAAKJ,MAAMgB,KACtBQ,SAAUpB,KAAKM,gBAIQ,aAApBN,KAAKJ,MAAMgB,KAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKjB,KAAKJ,MAAMgB,KAAhB,eACZC,EAAAC,EAAAC,cAAA,SACEH,KAAMZ,KAAKJ,MAAMgB,KACjBM,KAAMlB,KAAKJ,MAAMuB,SACjBH,UAAS,GAAAC,OAAKjB,KAAKJ,MAAMgB,MACzBP,MAAOL,KAAKJ,MAAMS,cAPnB,mCAeP,OAAOQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KAAiBvB,KAAKwB,sBArDbC,aCOLC,MAPf,SAAiB9B,GACf,OACIiB,EAAAC,EAAAC,cAAA,UACAC,UAAS,GAAAC,OAAKrB,EAAMoB,WAClBW,QAAS/B,EAAM+B,SAAU/B,EAAMgC,OCUxBC,MAdf,SAAcjC,GAKZ,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBrB,EAAMkC,EAA1B,mBAA8CH,QAJ9D,SAAqBI,GACnBnC,EAAM+B,QAAQI,KAIZlB,EAAAC,EAAAC,cAAA,KACEC,UAAS,SAAAC,OAAWrB,EAAMgB,KAAjB,SACToB,cAAY,WCqCLC,MA3Cf,SAAwBrC,GACtB,IAAKA,EAAMsC,UAAW,MAAO,GA6B7B,SAASC,EAAevC,GACtB,GAAKA,EAAMsC,WAActC,EAAMsC,UAAUE,QAEzC,OADgBtC,OAAOuC,QAAQzC,EAAMsC,UAAUE,SAIjD,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXmB,EAAevC,IAnCEwC,EAmC4BD,EAAevC,GAlC1C,UAAnBA,EAAMuB,SACAiB,EAAQE,IAAI,SAACC,EAAOT,GACzB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBsB,EAAO,GAA3B,oBAAAtB,OAAgDrB,EAAMuB,UAAYqB,IAAKD,EAAO,IAC1F1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeuB,EAAO,IACrC1B,EAAAC,EAAAC,cAAC0B,EAAD,CACE7B,KAAK,QACLe,QAAS/B,EAAM+B,QACfG,EAAGS,EAAO,QAIS,WAAnB3C,EAAMuB,SACPiB,EAAQE,IAAI,SAACC,EAAOT,GACzB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAC,OAAmBsB,EAAO,GAA1B,KAAAtB,OAAgCrB,EAAMuB,UAAYqB,IAAKD,EAAO,IAC1E1B,EAAAC,EAAAC,cAAC2B,EAAD,CACE9B,KAAK,WACLO,SAAQ,2BAAAF,OAA6Ba,EAAI,GACzCzB,MAAOkC,EAAO,KAChB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBuB,EAAO,YAR9C,GAsBqB,MAnC9B,IAAuBH,oCCmQVO,cAnQb,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXwC,cAAe,EACfC,gBAAiB,GACjBC,aAAc,GACdC,WAAY,CACVC,YAAa,eACbC,OAAQ,kBACRC,UAAW,cAEbC,gBAAiB,GAEnBtD,EAAKuD,YAAcvD,EAAKuD,YAAY7C,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKwD,+BAAiCxD,EAAKwD,+BAA+B9C,KAApCT,OAAAU,EAAA,EAAAV,CAAAD,IAGtCA,EAAKyD,YAAczD,EAAK0D,YAAYhD,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKwD,+BAAiCG,IAAEC,SACtC5D,EAAKwD,+BACL,KApBexD,2EAuBPkC,GACV/B,KAAK0D,sBAAsB3B,uCAEjBA,GACV/B,KAAKqD,+BAA+BtB,uCAE1BA,GAAG,IAAA4B,EAAA3D,KAET+B,GAAKA,EAAEpB,OAAOiD,YAAc5D,KAAKI,MAAM2C,WAAWC,aACpDhD,KAAK6D,iBAAiB9B,GACtB/B,KAAK0D,sBAAsB3B,GAE3B/B,KAAKqD,+BAA+BtB,GAEpCA,EAAE+B,UACFC,WAAW,WAETJ,EAAK/D,MAAM+B,QAAQ,CACjBI,EAAGA,EACHa,cAAee,EAAKvD,MAAMwC,cAC1BG,WAAYY,EAAKvD,MAAM2C,gBAIlBhB,EAAEpB,OAAOiD,YAAc5D,KAAKI,MAAM2C,WAAWE,QACtDjD,KAAKJ,MAAM+B,QAAQ,CACjBI,EAAGA,EACHa,cAAe5C,KAAKI,MAAMwC,cAC1BG,WAAY/C,KAAKI,MAAM2C,aAEzB/C,KAAKgE,oBAAoBjC,GACzB/B,KAAK0D,sBAAsB3B,IAGlBA,GAAKA,EAAEpB,OAAOiD,YAAc5D,KAAKI,MAAM2C,WAAWG,YAC3DnB,EAAE+B,UACF9D,KAAKiE,kCAAkClC,2DAIZA,GAAG,IAAAmC,EAAAlE,KAChC+B,EAAE+B,UACF9D,KAAKmE,sBAAsBpC,GAE3BgC,WAAW,WACTG,EAAKtE,MAAMyB,QAAQ,CAAEU,EAAGA,EAAGe,aAAcoB,EAAK9D,MAAM0C,2EAGtBf,GAAG,IAAAqC,EAAApE,KACnC+B,EAAE+B,UACF9D,KAAKmE,sBAAsBpC,GAE3BgC,WAAW,WACTK,EAAKxE,MAAM+B,QAAQ,CACjBI,EAAGA,EACHe,aAAcsB,EAAKhE,MAAM0C,aACzBC,WAAYqB,EAAKhE,MAAM2C,6DAKPhB,GACpB,IAAMsC,EAAcrE,KAAKI,MAAM+C,gBAa/B,SAASmB,EAAaC,GACpB,GAAKA,EAAK3E,MAAMkD,aAAauB,IAMtB,GAAIE,EAAK3E,MAAMkD,aAAauB,GAAc,CAC/C,IAAIG,EAAOC,IAAUF,EAAK3E,MAAMkD,cAChC0B,EAAKH,KACLE,EAAK7D,SAAS,CACZoC,aAAc0B,SAVyB,CACzC,IAAIA,EAAOC,IAAUF,EAAK3E,MAAMkD,cAChC0B,EAAKH,GAAe,EACpBE,EAAK7D,SAAS,CACZoC,aAAc0B,KAhBhBzC,EAAEpB,QAAUoB,EAAEpB,OAAOO,KAAKwD,SAAS,oBACrCJ,EAAatE,MAGb+B,EAAEpB,QACmB,WAArBoB,EAAEpB,OAAOgE,SACT5C,EAAEpB,OAAOiD,YAAc5D,KAAKI,MAAM2C,WAAWG,WAE7CoB,EAAatE,mDAmBI8B,GAAG,IAAA8C,EAAA5E,KACtB,OACEa,EAAAC,EAAAC,cAAA,OACEC,UAAS,YAAAC,OAAca,EAAI,EAAlB,aACTU,IAAKV,EACL+C,QAAS7E,KAAK8E,YAAYvE,KAAKP,OAE/Ba,EAAAC,EAAAC,cAAC2B,EAAD,CACE9B,KAAK,QACLO,SAAQ,kBAAAF,OAAoBa,EAAI,GAChCR,YAAY,WACZD,QAASrB,KAAKJ,MAAMyB,UAEtBR,EAAAC,EAAAC,cAAC2B,EAAD,CACE9B,KAAK,QACLO,SAAQ,wBAAAF,OAA0Ba,EAAI,GACtCR,YAAY,kCACZD,QAASrB,KAAKJ,MAAMyB,UAEtBR,EAAAC,EAAAC,cAAC2B,EAAD,CACE9B,KAAK,QACLO,SAAQ,oBAAAF,OAAsBa,EAAI,GAClCR,YAAY,cACZD,QAAS,SAAAZ,GACPA,EAAMqD,UACNc,EAAKtB,YAAY7C,MAGrBI,EAAAC,EAAAC,cAACgE,EAAD,CACE7C,UAAWlC,KAAKJ,MAAMsC,UAAYlC,KAAKJ,MAAMsC,UAAUJ,GAAK,KAC5DH,QAAS3B,KAAKJ,MAAM+B,QACpBR,SAAS,yDAKK,IAAA6D,EAAAhF,KACpB+D,WAAW,WAGTiB,EAAKtE,SAAS,CACZmC,gBAAiBoC,MAAMC,KACrB,CAAEC,OAAQH,EAAKpF,MAAMgD,eACrB,SAACwC,EAAGtD,GAAJ,OAAUA,OAGb,gDAIc,IAAAuD,EAAArF,KAEjBA,KAAKU,SAAS,CACZkC,cAAe5C,KAAKJ,MAAMgD,cAAgB,IAE5CmB,WAAW,WAETsB,EAAK3E,SAAS,CACZmC,gBAAiBoC,MAAMC,KACrB,CAAEC,OAAQE,EAAKzF,MAAMgD,eACrB,SAACwC,EAAGtD,GAAJ,OAAUA,OAGb,gDAGH,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC2B,EAAD,CACEvB,SAAS,cACTP,KAAK,QACLU,YAAY,QACZD,QAASrB,KAAKJ,MAAMyB,UAEtBR,EAAAC,EAAAC,cAAC2B,EAAD,CACE9B,KAAK,YACLO,SAAS,kBACTG,YAAY,mBACZD,QAASrB,KAAKJ,MAAMyB,yDAMNU,GAAG,IACnBoB,EADmBmC,EAAAtF,KAEjBuF,EAAIxD,EAAEpB,OAAOO,KAAKsE,OAAO,GAC/BzB,WAAW,WAEJwB,EAGMA,GAAKA,GAAKD,EAAK1F,MAAMgD,cAC9BO,EAAkBoC,EAETD,EAAK1F,MAAMgD,cAAgB2C,IACpCpC,EAAkBmC,EAAK1F,MAAMgD,eAN7BO,EAAkBmC,EAAK1F,MAAMgD,cAQ/B0C,EAAK5E,SAAS,CACZyC,gBAAiBA,IAGnBmC,EAAK1F,MAAMiF,QAAQ,CAAE9C,EAAGA,EAAGoB,gBAAiBA,KAC3C,+CAGa,IAAAsC,EAAAzF,KAChB,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZhB,KAAK0F,mBACN7E,EAAAC,EAAAC,cAAA,OACEC,UAAS,uBAAAC,OACPjB,KAAKI,MAAMyC,gBAAgBsC,OAAS,SAAW,KAGhDnF,KAAKI,MAAMyC,gBAAgBP,IAAI,SAACkB,EAAG1B,GAClC,OAAO2D,EAAKE,qBAAqB7D,KAEnCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAC6E,EAAD,CACE5E,UAAU,YACVY,KAAI,GAAAX,OAAKjB,KAAKI,MAAM2C,WAAWG,WAC/BvB,QAAS3B,KAAKoD,cAEhBvC,EAAAC,EAAAC,cAAC6E,EAAD,CACE5E,UAAU,iBACVY,KAAI,GAAAX,OAAKjB,KAAKI,MAAM2C,WAAWE,QAC/BtB,QAAS3B,KAAKoD,cAEhBvC,EAAAC,EAAAC,cAAC6E,EAAD,CACE5E,UAAU,cACVY,KAAI,GAAAX,OAAKjB,KAAKI,MAAM2C,WAAWC,aAC/BrB,QAAS3B,KAAKoD,kDASxB,OAAOvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KAAiBvB,KAAK6F,0BAhQTC,IAAMrE,WCLxBsE,EAAgBC,EAAQ,KAmDfC,MA/Cf,SAAoBrG,GAsChB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAnCbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEZH,EAAAC,EAAAC,cAAA,UAAKnB,EAAMsG,YAEbrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAACgF,EAAD,CAAeI,OAAQvG,EAAMwG,oBASjCvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAERpB,EAAMsC,UACPtC,EAAMsC,UAAUI,IAAI,SAAC+D,EAASvE,GAC5B,OACAjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWwB,IAAKV,GAC3BjB,EAAAC,EAAAC,cAAA,UAAKsF,EAASzE,MACdf,EAAAC,EAAAC,cAAA,SAAIsF,EAASC,aACbzF,EAAAC,EAAAC,cAACgE,EAAD,CACE7C,UAAWmE,EACXlF,SAAS,cARE,QCqNhBoF,cA1Ob,SAAAA,EAAY3G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,IACjB1G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyG,GAAApG,KAAAH,KAAMJ,KACDQ,MAAQ,CACX8B,UAAW,GACXU,cAAe,EACfE,aAAc,GACdK,gBAAgB,GAElBtD,EAAKuD,YAAcvD,EAAKuD,YAAY7C,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAK0D,YAAc1D,EAAK0D,YAAYhD,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAK2G,mBAAqB3G,EAAK2G,mBAAmBjG,KAAxBT,OAAAU,EAAA,EAAAV,CAAAD,IAC1BA,EAAKiF,YAAcjF,EAAKiF,YAAYvE,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IAXFA,sFAcI4G,GACrB,IAAIjC,EAAOC,IAAUzE,KAAKI,MAAM8B,WAIhC,OAHAsC,EAAKiC,GAAO,CACVC,GAAI1G,KAAKI,MAAMwC,eAEV4B,wCAGKmC,EAAM3F,GAClB,IAAM4F,EAAK9G,OAAA+G,EAAA,EAAA/G,CAAO6G,GADUG,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE5B,QAAAC,EAAAC,EAAaP,EAAbQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmB,CACjB,GADiBI,EAAA7G,MACZqE,SAAS1D,GACZ,OAAO,GAJiB,MAAAwG,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAM,QAAAN,EAAAM,SAAA,WAAAV,EAAA,MAAAC,GAO5B,OAAO,sCAEGjF,GACV,GAAIA,EAAEA,GAAKA,EAAEA,EAAEpB,OAAOiD,YAAc7B,EAAEgB,WAAWC,YAAa,CAE5DhD,KAAKU,SAAS,CAAEkC,cAAeb,EAAEa,gBACjC,IAAM6D,EAAMzG,KAAKI,MAAMwC,cACvB,IAAK5C,KAAKI,MAAM8B,UAAUuE,GAAM,CAC9B,IAAMiB,EAAS1H,KAAK2H,uBAAuBlB,GAC3CzG,KAAKU,SAAS,CACZwB,UAAWwF,UAIP3F,EAAEA,GAAKA,EAAEA,EAAEpB,OAAOiD,YAAc7B,EAAEgB,WAAWE,OACrDjD,KAAK4H,eAAe7F,GAEZA,EAAEpB,QAAUX,KAAK6H,cAAc9F,EAAEpB,OAAOmH,UAAU,kBACxD9H,KAAK+H,yBAAyBhG,GAExBA,EAAEA,EAAEpB,QAAUoB,EAAEA,EAAEpB,OAAOiD,YAAc7B,EAAEgB,WAAWG,YAC5DlD,KAAKU,SAAS,CACZoC,aAAcf,EAAEe,eAElB9C,KAAKgI,gBAAgBjG,EAAEA,EAAG,uDAGlBA,GAENA,IAAMA,EAAEpB,OACNoB,EAAEA,EAAEpB,QAAUoB,EAAEA,EAAEpB,OAAOO,KAAKwD,SAAS,sBACzC1E,KAAKU,SAAS,CACZoC,aAAcf,EAAEe,eAElB9C,KAAKgI,gBAAgBjG,EAAEA,EAAG,qBAGnBA,EAAEpB,SAEW,gBAAlBoB,EAAEpB,OAAOO,KACXlB,KAAKU,SAAS,CAAEwF,UAAWnE,EAAEpB,OAAON,QAET,oBAAlB0B,EAAEpB,OAAOO,MAClB+G,QAAQC,IAAInG,EAAEpB,OAAON,OACrB4H,QAAQC,IAAInG,EAAEpB,OAAON,MAAMqE,SAAS,OAEpC1E,KAAKU,SAAS,CAAE0F,gBAAiBrE,EAAEpB,OAAON,SAEjC0B,EAAEpB,OAAOO,KAAKwD,SAAS,kBAChC1E,KAAKgI,gBAAgBjG,EAAG,QAEfA,EAAEpB,OAAOO,KAAKwD,SAAS,yBAChC1E,KAAKgI,gBAAgBjG,EAAG,iEAOLA,GACvB,IAAMoG,EAAkBpG,EAAEpB,OAAOyH,WAAWA,WAAWA,WACjD/D,EAAcgE,SAASF,EAAgBL,UAAU,GAAGtC,OAAO,IAC3D8C,EAAYD,SAAStG,EAAEpB,OAAOmH,UAAU,GAAGtC,OAAO,IAClD+C,EAAgB9D,IAAUzE,KAAKI,MAAM8B,WACrCiB,EAAkBoF,EAAclE,UAE/BlB,EAAe,QAAYmF,GAElCtI,KAAKU,SAAS,CACZwB,UAAUqG,IAGZvI,KAAKwI,sBAAsBrF,iDAGPA,GACpB,IAAMsF,EAAchE,IAAUzE,KAAKI,MAAM0C,cAEtC2F,EAAYzI,KAAKI,MAAM+C,iBAAmB,GAC3CsF,EAAYzI,KAAKI,MAAM+C,mBAGzBnD,KAAKU,SAAS,CACZoC,aAAa2F,6CAKf,IAAMC,EAAU1I,KAAKI,MAAM+C,gBACrBqB,EAAOC,IAAUzE,KAAKI,MAAM8B,kBAE3BsC,EAAKkE,GAEZ,IAAMC,EAAW3I,KAAKI,MAAMwC,cAAgB5C,KAAKI,MAAMwC,cAAgB,EAAI,EAC3E5C,KAAKU,SAAS,CACZkC,cAAe+F,EACfzG,UAAWsC,4CAICzC,EAAGnB,GAEjB,GAAa,SAATA,GAA4B,gBAATA,EAAwB,CAC7C,IAAMuC,EAAkBnD,KAAKI,MAAM+C,gBAC7BoF,EAAgB9D,IAAUzE,KAAKI,MAAM8B,WAEtCqG,EAAcpF,GAKjBoF,EAAcpF,GAAiBvC,GAAQmB,EAAEpB,OAAON,MAJhDkI,EAAcpF,GAAdrD,OAAA8I,EAAA,EAAA9I,CAAA,GACGc,EAAOmB,EAAEpB,OAAON,OAKrBL,KAAKU,SAAS,CACZwB,UAAWqG,SAGR,GAAa,qBAAT3H,GAAwC,mBAATA,EAA2B,CACnE,IAAMuC,EAAkBnD,KAAKI,MAAM+C,gBAC7BoF,EAAgB9D,IAAUzE,KAAKI,MAAM8B,WAE3C,GAAW,qBAARtB,EAA4B,CAE7B,GAAsB,MAAnBmB,EAAEpB,OAAON,OAAoC,KAAnB0B,EAAEpB,OAAON,MAAc,OAEpD,GAAKkI,EAAcpF,GAAd,SAOE,GAAIoF,EAAcpF,GAAd,QAA2C,CACpD,IAAMX,EAAMxC,KAAKI,MAAM0C,aAAa9C,KAAKI,MAAM+C,iBAC/CoF,EAAcpF,GAAd,QAA0CX,GAAOT,EAAEpB,OAAON,MAE1DL,KAAKU,SAAS,CAAEwB,UAAWqG,UAV3BA,EAAcpF,GAAd,QAAArD,OAAA8I,EAAA,EAAA9I,CAAA,GACGE,KAAKI,MAAM0C,aAAaK,GAAmBpB,EAAEpB,OAAON,OAEvDL,KAAKU,SAAS,CAAEwB,UAAWqG,SAUxB,GAAY,mBAAT3H,EAA0B,CAClC,GAAmD,IAAhDd,OAAOuC,QAAQrC,KAAKI,MAAM8B,WAAWiD,OAEtC,YADA8C,QAAQY,MAAM,gDAGb,GAAKN,EAAcpF,GAAd,SAOD,GAAIoF,EAAcpF,GAAd,QAA2C,CACpD,IAAMX,EAAMxC,KAAKI,MAAM0C,aAAa9C,KAAKI,MAAM+C,iBAC/CoF,EAAcpF,GAAd,QAA0CX,GAA1C,UAAAvB,OAA2DjB,KAAKI,MAAM0C,aAAa9C,KAAKI,MAAM+C,kBAE9FnD,KAAKU,SAAS,CAAEwB,UAAWqG,UAV3BA,EAAcpF,GAAd,QAAArD,OAAA8I,EAAA,EAAA9I,CAAA,GACGE,KAAKI,MAAM0C,aAAaK,GAD3B,UAAAlC,OACwDjB,KAAKI,MAAM0C,aAAa9C,KAAKI,MAAM+C,mBAG3FnD,KAAKU,SAAS,CAAEwB,UAAWqG,mDAajC,GAAKvI,KAAKI,MAAM8B,UAAhB,CACA,IAAMA,EAAYpC,OAAOgJ,OAAO9I,KAAKI,MAAM8B,WAC3C,OAAQA,GAAY,oDAIAH,GACpB/B,KAAKU,SAAS,CACZyC,gBAAiBkF,SAAStG,EAAEoB,uDAGpBpB,GACV/B,KAAK0D,sBAAsB3B,oCAG3B,OACElB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgI,EAAD,CACAlE,QAAS7E,KAAK8E,YAAYvE,KAAKP,MAC/BqB,QAASrB,KAAKuD,YACd5B,QAAS3B,KAAKoD,YACdlB,UAAWlC,KAAKwG,qBAChB5D,cAAe5C,KAAKI,MAAMwC,cAC1BE,aAAc9C,KAAKI,MAAM0C,gBAI3BjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiI,EAAD,CACE9C,UAAWlG,KAAKI,MAAM8F,UACtBE,gBAAiBpG,KAAKI,MAAMgG,gBAC5B6C,cAAejJ,KAAKI,MAAM6I,cAC1B/G,UAAWlC,KAAKwG,iCAlOXV,IAAMrE,WCMVyH,MARf,WACE,OACErI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoI,EAAD,QCDNC,IAASC,OAAOxI,EAAAC,EAAAC,cAACuI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b66cb61e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n  renderInput() {\n    if (this.props.type === \"input\") {\n      return (\n        <div className={`${this.props.type}-container`}>\n          <input\n            name={this.props.instance}\n            className={`${this.props.type}  `}\n            value={this.state.value}\n            onChange={this.handleChange}\n            onKeyUp={this.props.onKeyUp}\n            placeholder={this.props.placeholder}\n          />\n        </div>\n      );\n    } else if (this.props.type === \"text-area\") {\n      return (\n        <div className={`${this.props.type}-container`}>\n          <textarea\n            value={this.state.value}\n            name={this.props.instance}\n            onKeyUp={this.props.onKeyUp}\n            placeholder={this.props.placeholder}\n            className={this.props.type}\n            onChange={this.handleChange}\n          />\n        </div>\n      );\n    } else if (this.props.type === \"checkbox\") {\n      return (\n        <div className={`${this.props.type}-container`}>\n          <input\n            type={this.props.type}\n            name={this.props.instance}\n            className={`${this.props.type}`}\n            value={this.props.value}\n          />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return <React.Fragment>{this.renderInput()}</React.Fragment>;\n  }\n}\n\nexport default Input;\n","import React from \"react\"\n\nfunction Buttton(props) {\n  return (\n      <button \n      className={`${props.className}`}\n        onClick={props.onClick}>{props.text}</button>\n  )\n}\nexport default Buttton\n","import React from \"react\"\n\nfunction Icon(props) {\n  // pass event to parent\n  function handleClick(e) {\n    props.onClick(e)\n  }\n  return (\n    <div className={`icon-container-${props.i} icon-container`} onClick={handleClick}>\n      <i\n        className={`fa fa-${props.type} icon`}\n        aria-hidden=\"true\"\n      />\n    </div>\n  )\n}\nexport default Icon\n","import React from \"react\";\nimport Icon from \"./Icon\";\nimport Input from \"./Input\";\n\n// renders options only\nfunction OptionsPreview(props) {\n  if (!props.questions) return \"\";\n\n  function renderOptions(options) {\n    if(props.instance === \"input\"){\n      return options.map((option,i) => {\n        return (\n          <div className={`option-preview-${option[0]} option-preview ${props.instance}`} key={option[0]}>\n            <div className=\"option-text\">{option[1]}</div>\n            <Icon \n              type=\"trash\" \n              onClick={props.onClick}\n              i={option[0]}/>\n          </div>\n        );\n      });\n    } else if(props.instance === \"output\"){\n      return options.map((option,i) => {\n        return (\n          <div className={`option-output-${option[0]} ${props.instance}`} key={option[0]}>\n            <Input\n              type=\"checkbox\"\n              instance={`question-options-output-${i + 1}`}\n              value={option[1]}/>\n            <div className=\"options-output-text\">{option[1]}</div>\n          </div>\n        );\n      });\n    }\n  }\n  function makeOptionsArr(props) {\n    if (!props.questions || !props.questions.options) return;\n    const options = Object.entries(props.questions.options);\n    return options;\n  }\n  \n  return (\n    <div className=\"options-preview-conatainer\">\n      {!makeOptionsArr(props) ? null : renderOptions(makeOptionsArr(props))}\n    </div>\n  );\n}\n\nexport default OptionsPreview;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport OptionsPreview from \"./OptionsPreview\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport _ from \"lodash\";\n\nclass InputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionCount: 0,\n      questionsMarkup: [],\n      optionsCount: {},\n      buttonText: {\n        addQuestion: \"ADD QUESTION\",\n        delete: \"DELETE QUESTION\",\n        addOption: \"ADD OPTION\"\n      },\n      currentQuestion: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleUpstreamOptions_debounce = this.handleUpstreamOptions_debounce.bind(\n      this\n    );\n    this.handleKeyup = this.handleKeyUp.bind(this);\n    this.handleUpstreamOptions_debounce = _.debounce(\n      this.handleUpstreamOptions_debounce,\n      1000\n    );\n  }\n  handleFocus(e) {\n    this.manageCurrentQuestion(e);\n  }\n  handleKeyUp(e) {\n    this.handleUpstreamOptions_debounce(e);\n  }\n  handleClick(e) {\n    // when add question button clicked\n    if (e && e.target.innerHTML === this.state.buttonText.addQuestion) {\n      this.addQuestionInput(e);\n      this.manageCurrentQuestion(e);\n      // call here to work with debounce\n      this.handleUpstreamOptions_debounce(e);\n\n      e.persist();\n      setTimeout(() => {\n        // set question count to parent\n        this.props.onClick({\n          e: e,\n          questionCount: this.state.questionCount,\n          buttonText: this.state.buttonText\n        });\n      });\n      // when delete question button clicked\n    } else if (e.target.innerHTML === this.state.buttonText.delete) {\n      this.props.onClick({\n        e: e,\n        questionCount: this.state.questionCount,\n        buttonText: this.state.buttonText\n      });\n      this.deleteQuestionInput(e);\n      this.manageCurrentQuestion(e);\n\n      // when add options question button clicked - no debounce\n    } else if (e && e.target.innerHTML === this.state.buttonText.addOption) {\n      e.persist();\n      this.handleUpstreamOptions_NO_debounce(e);\n    }\n  }\n  // send optionscount to parent\n  handleUpstreamOptions_debounce(e) {\n    e.persist();\n    this.incrementOptionsCount(e);\n    // send optionCount to parent\n    setTimeout(() => {\n      this.props.onKeyUp({ e: e, optionsCount: this.state.optionsCount });\n    });\n  }\n  handleUpstreamOptions_NO_debounce(e) {\n    e.persist();\n    this.incrementOptionsCount(e);\n    // send option count to parent\n    setTimeout(() => {\n      this.props.onClick({\n        e: e,\n        optionsCount: this.state.optionsCount,\n        buttonText: this.state.buttonText\n      });\n    });\n  }\n  //increment optionCount\n  incrementOptionsCount(e) {\n    const questionNum = this.state.currentQuestion;\n    // when input entered in options - with debounce\n    if (e.target && e.target.name.includes(\"question-options\")) {\n      updateObject(this);\n      // for options button\n    } else if (\n      e.target &&\n      e.target.tagName === \"BUTTON\" &&\n      e.target.innerHTML === this.state.buttonText.addOption\n    ) {\n      updateObject(this);\n    }\n    // utility func used for DRY inside the parent func\n    function updateObject(that) {\n      if (!that.props.optionsCount[questionNum]) {\n        let copy = cloneDeep(that.props.optionsCount);\n        copy[questionNum] = 1;\n        that.setState({\n          optionsCount: copy\n        });\n      } else if (that.props.optionsCount[questionNum]) {\n        let copy = cloneDeep(that.props.optionsCount);\n        copy[questionNum]++;\n        that.setState({\n          optionsCount: copy\n        });\n      }\n    }\n  }\n  renderQuestionMarkup(i) {\n    return (\n      <div\n        className={`question-${i + 1} question`}\n        key={i}\n        onFocus={this.handleFocus.bind(this)}\n      >\n        <Input\n          type=\"input\"\n          instance={`question-input-${i + 1}`}\n          placeholder=\"Question\"\n          onKeyUp={this.props.onKeyUp}\n        />\n        <Input\n          type=\"input\"\n          instance={`question-description-${i + 1}`}\n          placeholder=\"Question Description (Optional)\"\n          onKeyUp={this.props.onKeyUp}\n        />\n        <Input\n          type=\"input\"\n          instance={`question-options-${i + 1}`}\n          placeholder=\"Add Options\"\n          onKeyUp={event => {\n            event.persist();\n            this.handleKeyup(event);\n          }}\n        />\n        <OptionsPreview\n          questions={this.props.questions ? this.props.questions[i] : null}\n          onClick={this.props.onClick}\n          instance=\"input\"\n        />\n      </div>\n    );\n  }\n  deleteQuestionInput() {\n    setTimeout(() => {\n      // console.log(this.props.questionCount);\n      // this comes back from parent to render markup\n      this.setState({\n        questionsMarkup: Array.from(\n          { length: this.props.questionCount },\n          (v, i) => i\n        )\n      });\n    }, 100);\n  }\n  // increment count of questions\n  // use range to render arr of questions\n  addQuestionInput() {\n    // this goes and comes back from parent\n    this.setState({\n      questionCount: this.props.questionCount + 1\n    });\n    setTimeout(() => {\n      // this comes back from parent to render markup\n      this.setState({\n        questionsMarkup: Array.from(\n          { length: this.props.questionCount },\n          (v, i) => i\n        )\n      });\n    }, 100);\n  }\n  renderFormMarkUp() {\n    return (\n      <div className=\"title-form\">\n        <Input\n          instance=\"title-input\"\n          type=\"input\"\n          placeholder=\"Title\"\n          onKeyUp={this.props.onKeyUp}\n        />\n        <Input\n          type=\"text-area\"\n          instance=\"title-text-area\"\n          placeholder=\"Form Description\"\n          onKeyUp={this.props.onKeyUp}\n        />\n      </div>\n    );\n  }\n  // set currentQuestion and send to parent\n  manageCurrentQuestion(e) {\n    let currentQuestion;\n    const n = e.target.name.slice(-1);\n    setTimeout(() => {\n      // if nothing clicked by user set to last created\n      if (!n) {\n        currentQuestion = this.props.questionCount;\n        // if question clicked set that to current\n      } else if (n && n <= this.props.questionCount) {\n        currentQuestion = n;\n        // if question gets deleted set to next in line\n      } else if (this.props.questionCount < n) {\n        currentQuestion = this.props.questionCount;\n      }\n      this.setState({\n        currentQuestion: currentQuestion\n      });\n      // send currentQuestion to parent\n      this.props.onFocus({ e: e, currentQuestion: currentQuestion });\n    }, 100);\n  }\n \n  renderUserInput() {\n    return (\n      <div className=\"input-form\">\n        {this.renderFormMarkUp()}\n        <div\n          className={`questions-container ${\n            this.state.questionsMarkup.length ? \"active\" : \"\"\n          }`}\n        >\n          {this.state.questionsMarkup.map((_, i) => {\n            return this.renderQuestionMarkup(i);\n          })}\n          <div className=\"input-button-container\">\n            <Button\n              className=\"addOption\"\n              text={`${this.state.buttonText.addOption}`}\n              onClick={this.handleClick}\n            />\n            <Button\n              className=\"deleteQuestion\"\n              text={`${this.state.buttonText.delete}`}\n              onClick={this.handleClick}\n            />\n            <Button\n              className=\"addQuestion\"\n              text={`${this.state.buttonText.addQuestion}`}\n              onClick={this.handleClick}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return <React.Fragment>{this.renderUserInput()}</React.Fragment>;\n  }\n}\n\nexport default InputForm;\n","import React from \"react\";\nimport OptionsPreview from \"./OptionsPreview\";\nconst ReactMarkdown = require('react-markdown')\n\n\n\nfunction OutputForm(props) {\n  \n  function renderTitle(){\n      return(\n        <div className=\"output-form-header\">\n         <div className=\"output-title\">\n           \n            <h1>{props.formTitle}</h1>\n          </div>\n          <div className=\"viewer-paragraph\">\n          <ReactMarkdown source={props.formDescription} />\n           \n          </div>\n        </div>\n      )\n\n  }\n  function renderQuestions(){\n    return(\n      <div className=\"output-questions-canvas\">\n          {\n            !props.questions ? null : \n            props.questions.map((question,i) => {\n              return(\n              <div className=\"question\" key={i}>\n                  <h3>{question.text}</h3>\n                  <p>{question.description}</p>\n                  <OptionsPreview \n                    questions={question}\n                    instance=\"output\"/>\n              </div>\n              )\n            })\n          }\n\n        </div>\n    )\n  }  \n    return (\n      <div className=\"output-form\">\n         {renderTitle()}\n         {renderQuestions()}\n      </div>\n    )\n  \n}\n\nexport default OutputForm;\n","import React from \"react\";\nimport InputForm from \"./InputForm\";\nimport OutputForm from \"./OutputForm\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: {},\n      questionCount: 0,\n      optionsCount: {},\n      currentQuestion:0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.makeQuestionsArray = this.makeQuestionsArray.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n  // create blank question object with id \n  createNewBlankQuestion(num) {\n    let copy = cloneDeep(this.state.questions);\n    copy[num] = {\n      id: this.state.questionCount\n    };\n    return copy;\n  }\n  // check if class is in a classList\n  checkForClass(list, className){\n    const array = [...list]\n    for(let i of array){\n      if(i.includes(className)){\n        return true\n      }\n    }\n    return false\n  }\n  handleClick(e) {\n    if (e.e && e.e.target.innerHTML === e.buttonText.addQuestion) {\n      // set question count from child\n      this.setState({ questionCount: e.questionCount });\n      const num = this.state.questionCount;\n      if (!this.state.questions[num]) {\n        const newObj = this.createNewBlankQuestion(num);\n        this.setState({\n          questions: newObj\n        });\n      }\n\n    } else if(e.e && e.e.target.innerHTML === e.buttonText.delete){\n      this.deleteQuestion(e)\n      \n    } else if(e.target && this.checkForClass(e.target.classList,\"icon-container\")){\n        this.deleteOptionFromQuestion(e) \n\n    } else if(e.e.target && e.e.target.innerHTML === e.buttonText.addOption){\n      this.setState({\n        optionsCount: e.optionsCount\n      });\n      this.updateQuestions(e.e, \"options-button\");\n    }\n  }\n  handleKeyUp(e) {\n    // pass count to state\n    if (e && !e.target) {\n      if (e.e.target && e.e.target.name.includes(\"question-options\")) {\n        this.setState({\n          optionsCount: e.optionsCount\n        });\n        this.updateQuestions(e.e, \"options-debounce\");\n      }\n\n    } else if (e.target) {\n\n      if (e.target.name === \"title-input\") {\n        this.setState({ formTitle: e.target.value });\n\n      } else if (e.target.name === \"title-text-area\") {\n        console.log(e.target.value)\n        console.log(e.target.value.includes('\\n'))\n\n        this.setState({ formDescription: e.target.value });\n\n      } else if (e.target.name.includes(\"question-input\")) {\n        this.updateQuestions(e, \"text\");\n\n      } else if (e.target.name.includes(\"question-description\")) {\n        this.updateQuestions(e, \"description\");\n\n      }\n    }\n  }\n  // delete from current question\n  // decrement option count\n  deleteOptionFromQuestion(e){\n    const questionNumNode = e.target.parentNode.parentNode.parentNode\n    const questionNum = parseInt(questionNumNode.classList[0].slice(-1))\n    const optionNum = parseInt(e.target.classList[0].slice(-1)) \n    const questionsCopy = cloneDeep(this.state.questions)\n    const currentQuestion = questionsCopy[questionNum]\n    // delete from inside current question\n    delete currentQuestion['options'][optionNum]\n  \n    this.setState({\n      questions:questionsCopy,\n    })\n\n    this.decrementOptionsCount(currentQuestion)\n  }\n  // decrement the global options counter\n  decrementOptionsCount(currentQuestion){\n    const optionsCopy = cloneDeep(this.state.optionsCount)\n  //  check option valye by currentQuestion\n    if(optionsCopy[this.state.currentQuestion] > 0){\n      optionsCopy[this.state.currentQuestion]--\n    }\n\n    this.setState({\n      optionsCount:optionsCopy\n    })\n  }\n  // delete question from global question obj\n  deleteQuestion(){\n    const current = this.state.currentQuestion\n    const copy = cloneDeep(this.state.questions)\n    \n    delete copy[current]\n    // update global question count\n    const newCount = this.state.questionCount ? this.state.questionCount - 1 : 0\n    this.setState({\n      questionCount: newCount,\n      questions: copy\n    })\n  }\n  // update question object when data is recieved from inputs\n  updateQuestions(e, type) {\n\n    if (type === \"text\" || type === \"description\") {\n      const currentQuestion = this.state.currentQuestion;\n      const questionsCopy = cloneDeep(this.state.questions);\n      // is doesn't exist create\n      if (!questionsCopy[currentQuestion]) {\n        questionsCopy[currentQuestion] = {\n          [type]: e.target.value\n        };\n      } else {\n        questionsCopy[currentQuestion][type] = e.target.value;\n      }\n      this.setState({\n        questions: questionsCopy\n      });\n\n    } else if (type === \"options-debounce\" || type === \"options-button\") {\n      const currentQuestion = this.state.currentQuestion;\n      const questionsCopy = cloneDeep(this.state.questions);\n      // if options doesn't exist create it\n      if(type ===\"options-debounce\" ){\n        // don't create empty option\n        if(e.target.value === \" \" || e.target.value === \"\") return\n\n        if (!questionsCopy[currentQuestion][\"options\"]) {\n          questionsCopy[currentQuestion][\"options\"] = {\n            [this.state.optionsCount[currentQuestion]]: e.target.value\n          };\n          this.setState({ questions: questionsCopy });\n\n          //  else add to the options obj\n        } else if (questionsCopy[currentQuestion][\"options\"]) {\n          const key = this.state.optionsCount[this.state.currentQuestion];\n          questionsCopy[currentQuestion][\"options\"][key] = e.target.value;\n\n          this.setState({ questions: questionsCopy });\n        }\n\n      } else if(type === \"options-button\"){\n        if(Object.entries(this.state.questions).length === 0){\n          console.error(\"No questions created. Cannot create options.\")\n          return\n        }\n           if (!questionsCopy[currentQuestion][\"options\"]) {\n          questionsCopy[currentQuestion][\"options\"] = {\n            [this.state.optionsCount[currentQuestion]]: `Option ${this.state.optionsCount[this.state.currentQuestion]}`\n          };\n\n          this.setState({ questions: questionsCopy });\n          //  else add to the options obj\n        } else if (questionsCopy[currentQuestion][\"options\"]) {\n          const key = this.state.optionsCount[this.state.currentQuestion];\n          questionsCopy[currentQuestion][\"options\"][key] = `Option ${this.state.optionsCount[this.state.currentQuestion]}`\n  \n          this.setState({ questions: questionsCopy });\n        }\n      }\n    }\n  }\n  // make an array for mapping child props  \n  makeQuestionsArray() {\n    if (!this.state.questions) return;\n    const questions = Object.values(this.state.questions);\n    return !questions ? null : questions;\n  }\n\n  // handle current question state from child\n  manageCurrentQuestion(e){\n    this.setState({\n      currentQuestion: parseInt(e.currentQuestion)\n    })\n  }\n  handleFocus(e){\n    this.manageCurrentQuestion(e)\n  }\n  render() {\n    return (\n      <main className=\"cols main\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <InputForm \n            onFocus={this.handleFocus.bind(this)}\n            onKeyUp={this.handleKeyUp} \n            onClick={this.handleClick}\n            questions={this.makeQuestionsArray()}\n            questionCount={this.state.questionCount}\n            optionsCount={this.state.optionsCount} \n            />\n          </div>\n          \n          <div className=\"col\">\n            <OutputForm\n              formTitle={this.state.formTitle}\n              formDescription={this.state.formDescription}\n              textAreaValue={this.state.textAreaValue}\n              questions={this.makeQuestionsArray()}\n            />\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./components/Page\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}